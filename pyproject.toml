[project]
name = "common-nb-preprocessors"
version = "1.0.2"
description = "preprocessors"
authors = [
    {name = "Kai Norman Clasen", email= "k.clasen@protonmail.com"},
]
license = {text = "MIT license"}
readme = "README.md"

#- Uses the < syntax instead of <= because conda-forge does not work correctly with <=
# deps-start
requires-python = ">=3.8"
dependencies = [
    "nbformat>=5.4.0",
    "nbconvert>=6.5.0",
    "pydantic>=1.9.1",
    "pyyaml>=6.0",
]
# deps-end

[project.urls]
homepage = "https://github.com/kai-tub/common-nb-preprocessors/"
repository = "https://github.com/kai-tub/common-nb-preprocessors/"
documentation = "https://kai-tub.github.io/common-nb-preprocessors/"

[project.optional-dependencies]
[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

# Currently it looks like a pdm bug that doesn't acknowledge
# a different package-dir
[tool.pdm.build]
includes = ["LICENSE", "common_nb_preprocessors"]

# I _think_ the minimum myst-nb version for which this works
# is v0.14, which was the big rewrite release
# As of now, jupyter-book requires myst-nb=0.13
# https://github.com/executablebooks/jupyter-book/blob/master/pyproject.toml
# This doesn't allow the default config to be used to overwrite the ipynb reader
[tool.pdm.dev-dependencies]
docs = [
    "myst-nb<1.0,>=0.16",
    "Sphinx<6.0,>=4.5",
    "sphinx-autobuild",
    "sphinx-external-toc",
    "linkify-it-py",
    "furo",
    "rich>=12.5.1",
]
test = [
    "pytest",
    "pre-commit",
    "jupyter",
    "notebook",
    "coverage>=6.4.2",
]
lint = [
    "black[jupyter]>=22.6.0",
    "isort",
    "nbstripout",
    "mypy",
]
dev = [
    "html5lib>=1.1",
    "pandas>=1.4.3",
    "lxml>=4.9.1",
    "jupyter-book>=0.6.5",
    "sphinx-design>=0.2.0",
    "hypothesis>=6.50.1",
]
mypy = [
    "types-PyYAML>=6.0.10",
    "pandas-stubs>=1.4.3.220718",
]

[tool.mypy]
exclude = ["tests"]
# common plugins:
# plugins = "numpy.typing.mypy_plugin"

[[tool.mypy.overrides]]
module = "nbconvert.*"
ignore_missing_imports = true

[tool.isort]
profile = "black"

[tool.pdm.scripts]
black = "black ."
isort = "isort ."
tests = "coverage run --parallel --source common_nb_preprocessors -m pytest tests"
# manually adjust per project the fail-under settings
coverage_report.composite = [
    "coverage combine",
    "coverage report --fail-under 95",
]
coverage_html_report = "coverage html"

check_types = "mypy common_nb_preprocessors"
lint.composite = [
    "black",
    "isort",
    "check_types",
]
lint.help = "Will check if all files are formatted with black & isort"

build-docs.cmd = "sphinx-build docs docs/_build/"
build-docs.help = "Build Sphinx documentation"
serve-sphinx-docs.cmd = "sphinx-autobuild docs docs/_build --open-browser"
serve-sphinx-docs.help = "Serve the Sphinx documentation with sphinx-autobuild"

coverage_html.composite = [
    "tests",
    "coverage_html_report"
]
coverage_html.help = "Run the coverage with pytest and produce the html"
